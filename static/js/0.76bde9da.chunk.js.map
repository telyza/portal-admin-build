{"version":3,"file":"static/js/0.76bde9da.chunk.js","mappings":"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","sources":["utils/formatTime.js","hooks/useTabs.js","components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","sections/@dashboard/user/account/AccountChangePassword.js","sections/@dashboard/user/account/AccountGeneral.js","pages/dashboard/UserAccount.js"],"sourcesContent":["import { format, getTime, formatDistanceToNow } from \"date-fns\";\n\n// ----------------------------------------------------------------------\n\nexport function fDateOnly(date, format_a = \"MM-dd-yyyy\") {\n  return format(new Date(date), format_a);\n}\n\nexport function fDate(date) {\n  return format(new Date(date), \"dd MMMM yyyy\");\n}\n\nexport function fDateTime(date) {\n  return format(new Date(date), \"dd MMM yyyy HH:mm\");\n}\n\nexport function fTimestamp(date) {\n  return getTime(new Date(date));\n}\n\nexport function fDateTimeSuffix(date) {\n  return format(new Date(date), \"dd/MM/yyyy hh:mm p\");\n}\n\nexport function fToNow(date) {\n  return formatDistanceToNow(new Date(date), {\n    addSuffix: true,\n  });\n}\n","import { useState } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useTabs(defaultValues) {\n  const [currentTab, setCurrentTab] = useState(defaultValues || '');\n\n  return {\n    currentTab,\n    onChangeTab: (event, newValue) => {\n      setCurrentTab(newValue);\n    },\n    setCurrentTab,\n  };\n}\n","import PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBreadcrumbs.propTypes = {\n  activeLast: PropTypes.bool,\n  links: PropTypes.array.isRequired,\n};\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\n  const currentLink = links[links.length - 1].name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLinkItem.propTypes = {\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string,\n  }),\n};\n\nfunction LinkItem({ link }) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import isString from 'lodash/isString';\nimport PropTypes from 'prop-types';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import * as Yup from \"yup\";\nimport { useSnackbar } from \"notistack\";\nimport { useTranslation } from \"react-i18next\";\n// form\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\n// @mui\nimport { Stack, Card } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\n// components\nimport { FormProvider, RHFTextField } from \"../../../../components/hook-form\";\nimport axios from \"../../../../utils/axios\";\n\n// ----------------------------------------------------------------------\n\nexport default function AccountChangePassword() {\n  const { enqueueSnackbar } = useSnackbar();\n  const { t } = useTranslation();\n\n  const ChangePassWordSchema = Yup.object().shape({\n    oldPassword: Yup.string().required(\"Old Password is required\"),\n    newPassword: Yup.string()\n      .min(6, \"Password must be at least 6 characters\")\n      .required(\"New Password is required\"),\n    confirmNewPassword: Yup.string().oneOf(\n      [Yup.ref(\"newPassword\"), null],\n      \"Passwords must match\"\n    ),\n  });\n\n  const defaultValues = {\n    oldPassword: \"\",\n    newPassword: \"\",\n    confirmNewPassword: \"\",\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(ChangePassWordSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      const response = await axios.put(\"/api/v1/admin-api/update-password\", data);\n      reset();\n      enqueueSnackbar(response.data);\n    } catch (error) {\n      console.error(error);\n      enqueueSnackbar(error.response.data, { variant: \"error\" });\n    }\n  };\n\n  return (\n    <Card sx={{ p: 3 }}>\n      <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n        <Stack spacing={3} alignItems=\"flex-end\">\n          <RHFTextField\n            name=\"oldPassword\"\n            type=\"password\"\n            label={t(\"params.oldpassword\")}\n          />\n\n          <RHFTextField\n            name=\"newPassword\"\n            type=\"password\"\n            label={t(\"params.newpassword\")}\n          />\n\n          <RHFTextField\n            name=\"confirmNewPassword\"\n            type=\"password\"\n            label={t(\"params.confpassword\")}\n          />\n\n          <LoadingButton\n            type=\"submit\"\n            variant=\"contained\"\n            loading={isSubmitting}\n          >\n            {t(\"params.save\")}\n          </LoadingButton>\n        </Stack>\n      </FormProvider>\n    </Card>\n  );\n}\n","import * as Yup from \"yup\";\nimport { useSnackbar } from \"notistack\";\nimport { useCallback, useEffect, useState } from \"react\";\n// form\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n// @mui\nimport { Box, Grid, Card, Stack, Typography } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\n// hooks\nimport useAuth from \"../../../../hooks/useAuth\";\nimport useIsMountedRef from \"../../../../hooks/useIsMountedRef\";\n// utils\nimport { fData } from \"../../../../utils/formatNumber\";\nimport { fDateOnly } from \"../../../../utils/formatTime\";\n// components\nimport {\n  FormProvider,\n  RHFSelect,\n  RHFTextField,\n  RHFPhoneField,\n  RHFUploadAvatar,\n  RHFDateField,\n} from \"../../../../components/hook-form\";\nimport { useDispatch, useSelector } from \"../../../../redux/store\";\nimport {\n  getGenres,\n  getMaritals,\n  getCountries,\n} from \"../../../../redux/slices/generale\";\nimport { useTranslation } from \"react-i18next\";\n\n// ----------------------------------------------------------------------\n\nexport default function AccountGeneral() {\n  const { user, update } = useAuth();\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const { countries, genres, maritals } = useSelector(\n    (state) => state.generale\n  );\n\n  useEffect(() => {\n    dispatch(getCountries());\n    dispatch(getGenres());\n    dispatch(getMaritals());\n  }, [dispatch]);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const isMountedRef = useIsMountedRef();\n\n  const UpdateUserSchema = Yup.object().shape({\n    phone: Yup.string().required(\"phone is required\"),\n    firstName: Yup.string().required(\"firstName is required\"),\n    lastName: Yup.string().required(\"lastName is required\"),\n    // username: Yup.string()\n    //   .required(\"username is required\")\n    //   .matches(/^[A-Za-z0-9_]{1,15}$/, \"your username is incorect\"),\n    email: Yup.string()\n      .email(\"Email must be a valid email address\")\n      .required(\"email is required\"),\n    photo: Yup.mixed().required(\"photo is required\"),\n    country: Yup.string().required(\"country is required\"),\n    description: Yup.string().required(\"description is required\"),\n  });\n\n  const defaultValues = {\n    phone: user?.phone || \"\",\n    firstName: user?.first_name || \"\",\n    lastName: user?.last_name || \"\",\n    username: user?.username || \"\",\n    born_date: user?.born_date || new Date(),\n    email: user?.email || \"\",\n    photo: user?.photo || \"\",\n    country: user?.country || \"\",\n    description: user?.description || \"\",\n    city: user?.city || \"\",\n    address: user?.address || \"\",\n    genre: user?.genre || \"\",\n    marital: user?.marital || \"\",\n  };\n\n  const [open, setOpen] = useState(false);\n\n  const methods = useForm({\n    resolver: yupResolver(UpdateUserSchema),\n    defaultValues,\n  });\n\n  const {\n    setValue,\n    watch,\n    setError,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n  const values = watch();\n\n  const onSubmit = async (data) => {\n    try {\n      const formData = new FormData();\n\n      Object.entries(values).forEach(([key, value]) => {\n        if (![\"photo\"].includes(key)) {\n          if (key === \"born_date\") {\n            formData.append(key, fDateOnly(value));\n          } else {\n            formData.append(key, value);\n          }\n        }\n      });\n      if (open === true) {\n        formData.append(\"photo\", data.photo);\n      }\n\n      await update(formData);\n      enqueueSnackbar(\"Update success!\");\n    } catch (error) {\n      console.error(error);\n      if (isMountedRef.current) {\n        setError(\"afterSubmit\", {\n          ...error,\n          message: error.response.statusText,\n        });\n        if (error.response.data.phone) {\n          setError(\"phone\", { ...error, message: error.response.data.phone });\n        }\n        if (error.response.data.username) {\n          setError(\"username\", {\n            ...error,\n            message: error.response.data.username,\n          });\n        }\n        if (error.response.data.email) {\n          setError(\"email\", { ...error, message: error.response.data.email });\n        } else if (error.response.data.non_field_errors) {\n          setError(\"email\", {\n            ...error,\n            message: error.response.data.non_field_errors,\n          });\n        }\n        if (error.response.data.photo) {\n          setError(\"photo\", { ...error, message: error.response.data.photo });\n        }\n      }\n    }\n  };\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n\n      if (file) {\n        setValue(\n          \"photo\",\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        );\n      }\n      setOpen(true);\n    },\n    [setValue]\n  );\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={4}>\n          <Card sx={{ py: 10, px: 3, textAlign: \"center\" }}>\n            <RHFUploadAvatar\n              name=\"photo\"\n              accept=\"image/*\"\n              maxSize={3145728}\n              onDrop={handleDrop}\n              helperText={\n                <Typography\n                  variant=\"caption\"\n                  sx={{\n                    mt: 2,\n                    mx: \"auto\",\n                    display: \"block\",\n                    textAlign: \"center\",\n                    color: \"text.secondary\",\n                  }}\n                >\n                  Allowed *.jpeg, *.jpg, *.png, *.gif\n                  <br /> max size of {fData(3145728)}\n                </Typography>\n              }\n            />\n\n            {/* <RHFSwitch\n              name=\"isPublic\"\n              labelPlacement=\"start\"\n              label=\"Public Profile\"\n              sx={{ mt: 5 }}\n            /> */}\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} md={8}>\n          <Card sx={{ p: 3 }}>\n            <Box\n              sx={{\n                display: \"grid\",\n                rowGap: 3,\n                columnGap: 2,\n                gridTemplateColumns: {\n                  xs: \"repeat(1, 1fr)\",\n                  sm: \"repeat(2, 1fr)\",\n                },\n              }}\n            >\n              <RHFTextField\n                type=\"email\"\n                name=\"email\"\n                label={t(\"field.email\")}\n              />\n              <RHFPhoneField name=\"phone\" label={t(\"field.phone\")} />\n              <RHFTextField name=\"first_name\" label={t(\"field.first_name\")} />\n              <RHFTextField name=\"last_name\" label={t(\"field.last_name\")} />\n              <RHFDateField\n                name=\"born_date\"\n                maxDate={new Date()}\n                label={t(\"field.born_date\")}\n              />\n              <RHFSelect\n                name=\"genre\"\n                label={t(\"field.genre\")}\n                placeholder={t(\"field.genre\")}\n              >\n                <option value=\"\" />\n                {genres?.map((option) => (\n                  <option key={option} value={option}>\n                    {t(`genre.${option}`)}\n                  </option>\n                ))}\n              </RHFSelect>\n\n              <RHFSelect\n                name=\"marital\"\n                label={t(\"field.marital\")}\n                placeholder={t(\"field.marital\")}\n              >\n                <option value=\"\" />\n                {maritals?.map((option) => (\n                  <option key={option} value={option}>\n                    {t(`marital.${option}`)}\n                  </option>\n                ))}\n              </RHFSelect>\n              <RHFSelect\n                name=\"country\"\n                label={t(\"field.country\")}\n                placeholder={t(\"field.country\")}\n              >\n                <option value=\"\" />\n                {countries?.map((option) => (\n                  <option key={option.id} value={option.id}>\n                    {t(`country.${option.name}`)}\n                  </option>\n                ))}\n              </RHFSelect>\n              <RHFTextField name=\"city\" label={t(\"field.city\")} />\n            </Box>\n\n            <Stack spacing={3} alignItems=\"flex-end\" sx={{ mt: 3 }}>\n              <RHFTextField\n                name=\"description\"\n                multiline\n                rows={4}\n                label=\"Description\"\n              />\n\n              <LoadingButton\n                type=\"submit\"\n                variant=\"contained\"\n                loading={isSubmitting}\n              >\n                {t(\"params.save_change\")}\n              </LoadingButton>\n            </Stack>\n          </Card>\n        </Grid>\n      </Grid>\n    </FormProvider>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { capitalCase } from \"change-case\";\n// @mui\nimport { Container, Tab, Box, Tabs } from \"@mui/material\";\n// routes\nimport { PATH_DASHBOARD } from \"../../routes/paths\";\n// hooks\nimport useTabs from \"../../hooks/useTabs\";\nimport useSettings from \"../../hooks/useSettings\";\nimport useAuth from \"../../hooks/useAuth\";\n// _mock_\nimport {\n  _userPayment,\n  _userAddressBook,\n  _userInvoices,\n  _userAbout,\n} from \"../../_mock\";\n// components\nimport Page from \"../../components/Page\";\nimport Iconify from \"../../components/Iconify\";\nimport HeaderBreadcrumbs from \"../../components/HeaderBreadcrumbs\";\nimport { useTranslation } from \"react-i18next\";\n// sections\nimport {\n  AccountGeneral,\n  AccountBilling,\n  AccountSocialLinks,\n  AccountNotifications,\n  AccountChangePassword,\n} from \"../../sections/@dashboard/user/account\";\nimport { useDispatch, useSelector } from \"../../redux/store\";\nimport { useLocation } from \"react-router-dom\";\n// ----------------------------------------------------------------------\n\nexport default function UserAccount() {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const menu = new URLSearchParams(location.search).get(\"menu\");\n  const { t } = useTranslation();\n  const { user, refresh } = useAuth();\n\n  const { themeStretch } = useSettings();\n\n  const { currentTab, onChangeTab } = useTabs(\n    !menu ? \"profile\" : menu\n  );\n\n  const ACCOUNT_TABS = [\n    {\n      value: \"profile\",\n      icon: <Iconify icon={\"mdi:user-edit\"} width={20} height={20} />,\n      component: <AccountGeneral />,\n    },\n    // {\n    //   value: 'notifications',\n    //   icon: <Iconify icon={'eva:bell-fill'} width={20} height={20} />,\n    //   component: <AccountNotifications />,\n    // },\n    {\n      value: \"change_password\",\n      icon: <Iconify icon={\"ic:round-vpn-key\"} width={20} height={20} />,\n      component: <AccountChangePassword />,\n    },\n  ];\n\n  return (\n    <Page title=\"User: Account Settings\">\n      <Container maxWidth={themeStretch ? false : \"lg\"}>\n        <HeaderBreadcrumbs\n          heading={t(\"params.account\")}\n          links={[{ name: t(\"params.account_setting\") }]}\n        />\n\n        <Tabs\n          allowScrollButtonsMobile\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          value={currentTab}\n          onChange={onChangeTab}\n        >\n          {ACCOUNT_TABS.map((tab) => (\n            <Tab\n              disableRipple\n              key={tab.value}\n              label={t(\"params.\" + tab.value)}\n              icon={tab.icon}\n              value={tab.value}\n            />\n          ))}\n        </Tabs>\n\n        <Box sx={{ mb: 5 }} />\n\n        {ACCOUNT_TABS.map((tab) => {\n          const isMatched = tab.value === currentTab;\n          return isMatched && <Box key={tab.value}>{tab.component}</Box>;\n        })}\n      </Container>\n    </Page>\n  );\n}\n"],"names":["fDateOnly","date","format_a","arguments","length","undefined","format","Date","fDate","fDateTime","useTabs","defaultValues","currentTab","setCurrentTab","useState","onChangeTab","event","newValue","Breadcrumbs","_ref","links","activeLast","other","_objectWithoutProperties","_excluded","currentLink","name","listDefault","map","link","_jsx","LinkItem","listActiveLast","children","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","MUIBreadcrumbs","_objectSpread","separator","Box","component","width","height","borderRadius","bgcolor","_ref2","href","icon","_jsxs","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","AccountChangePassword","enqueueSnackbar","useSnackbar","t","useTranslation","ChangePassWordSchema","Yup","shape","oldPassword","required","newPassword","min","confirmNewPassword","oneOf","methods","useForm","resolver","yupResolver","reset","handleSubmit","formState","isSubmitting","Card","p","FormProvider","onSubmit","async","response","axios","put","data","error","console","Stack","spacing","RHFTextField","type","label","LoadingButton","loading","AccountGeneral","user","update","useAuth","dispatch","useDispatch","countries","genres","maritals","useSelector","state","generale","useEffect","getCountries","getGenres","getMaritals","isMountedRef","useIsMountedRef","UpdateUserSchema","phone","firstName","lastName","email","photo","country","description","first_name","last_name","username","born_date","city","address","genre","marital","open","setOpen","setValue","watch","setError","values","handleDrop","useCallback","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","formData","FormData","entries","forEach","key","value","includes","append","current","message","statusText","non_field_errors","Grid","container","item","xs","md","py","px","textAlign","RHFUploadAvatar","accept","maxSize","onDrop","helperText","mx","fData","rowGap","columnGap","gridTemplateColumns","sm","RHFPhoneField","RHFDateField","maxDate","RHFSelect","placeholder","option","concat","id","multiline","rows","UserAccount","location","useLocation","menu","URLSearchParams","search","get","refresh","themeStretch","useSettings","ACCOUNT_TABS","Iconify","Page","title","Container","Tabs","allowScrollButtonsMobile","scrollButtons","onChange","tab","Tab","disableRipple"],"sourceRoot":""}