{"version":3,"file":"static/js/855.57dcac23.chunk.js","mappings":"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","sources":["sections/home/HomeHero.js","sections/home/HomeMinimal.js","sections/home/HomeTely.js","sections/home/HomeDarkMode.js","sections/home/HomeLookingFor.js","sections/home/HomeColorPresets.js","sections/home/HomePricingPlans.js","sections/home/HomeAdvertisement.js","sections/home/HomeCleanInterfaces.js","sections/home/HomeHugePackElements.js","pages/Home.js"],"sourcesContent":["import { m } from \"framer-motion\";\nimport { Link as RouterLink } from \"react-router-dom\";\n// @mui\nimport { styled } from \"@mui/material/styles\";\nimport { Button, Box, Container, Typography, Stack } from \"@mui/material\";\n// routes\nimport { PATH_AUTH } from \"../../routes/paths\";\n// components\nimport Iconify from \"../../components/Iconify\";\nimport {\n  MotionContainer,\n  varFade,\n  TextAnimate,\n} from \"../../components/animate\";\nimport useResponsive from \"../../hooks/useResponsive\";\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(m.div)(({ theme }) => ({\n  position: \"relative\",\n  [theme.breakpoints.up(\"md\")]: {\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100vh\",\n    display: \"flex\",\n    position: \"fixed\",\n    alignItems: \"center\",\n  },\n}));\n\nconst ContentStyle = styled((props) => <Stack spacing={5} {...props} />)(\n  ({ theme }) => ({\n    zIndex: 10,\n    maxWidth: 520,\n    margin: \"auto\",\n    textAlign: \"center\",\n    position: \"relative\",\n    paddingTop: theme.spacing(15),\n    paddingBottom: theme.spacing(5),\n    [theme.breakpoints.up(\"md\")]: {\n      margin: \"unset\",\n      textAlign: \"left\",\n    },\n  })\n);\n\nconst HeroImgStyle = styled(m.img)(({ theme }) => ({\n  top: 0,\n  right: 0,\n  bottom: 0,\n  zIndex: 8,\n  width: \"100%\",\n  margin: \"auto\",\n  position: \"absolute\",\n  [theme.breakpoints.up(\"lg\")]: {\n    top: \"12%\",\n    right: \"2%\",\n    width: \"auto\",\n    height: \"88vh\",\n  },\n}));\n\nconst HeroImg2Style = styled(m.img)(({ theme }) => ({\n  zIndex: 8,\n  width: \"100%\",\n  margin: \"auto\",\n  [theme.breakpoints.up(\"lg\")]: {\n    width: \"auto\",\n    height: \"98vh\",\n  },\n}));\n// ----------------------------------------------------------------------\n\nexport default function HomeHero() {\n  const isDesktop = useResponsive(\"up\", \"md\");\n  return (\n    <MotionContainer>\n      <RootStyle>\n        {isDesktop && (\n          <HeroImgStyle\n            alt=\"hero\"\n            src=\"/static/assets/home/hero.png\"\n            variants={varFade().inUp}\n          />\n        )}\n\n        <Container>\n          <ContentStyle>\n            {!isDesktop && (\n              <HeroImg2Style\n                alt=\"hero\"\n                src=\"/static/assets/home/hero.png\"\n                variants={varFade().inUp}\n              />\n            )}\n            <m.div variants={varFade().inRight}>\n              <Typography variant=\"h1\" sx={{ color: \"text.black\" }}>\n                <TextAnimate text=\"Commencer\" variants={varFade().inDown} />\n                <br />\n                <TextAnimate text=\"votre\" variants={varFade().inUp} />\n                <TextAnimate text=\"&nbsp;Business\" variants={varFade().inUp} />\n                <br />\n                <TextAnimate text=\"TopTup\" variants={varFade().inUp} />\n                <br />\n                <TextAnimate text=\"avec&nbsp;\" variants={varFade().inUp} />\n                <TextAnimate\n                  text=\"Telyza Game\"\n                  sx={{ color: \"primary.main\" }}\n                  variants={varFade().inUp}\n                />\n              </Typography>\n            </m.div>\n            <m.div variants={varFade().inRight}>\n              <Typography variant=\"h5\" sx={{ color: \"text.black\" }}>\n                Commencer votre entreprise de revente top-up grâce à\n                notre plateforme tout-en-un.\n              </Typography>\n            </m.div>\n\n            <m.div variants={varFade().inRight}>\n              <Button\n                size=\"large\"\n                variant=\"contained\"\n                component={RouterLink}\n                to={PATH_AUTH.login}\n                startIcon={\n                  <Iconify icon={\"bi:play-fill\"} width={20} height={20} />\n                }\n              >\n                Commencer\n              </Button>\n            </m.div>\n          </ContentStyle>\n        </Container>\n      </RootStyle>\n      <Box sx={{ height: { md: \"100vh\" } }} />\n    </MotionContainer>\n  );\n}\n","import { m } from 'framer-motion';\n// @mui\nimport { alpha, useTheme, styled } from '@mui/material/styles';\nimport { Box, Card, Container, Typography } from '@mui/material';\n// components\nimport Image from '../../components/Image';\nimport { MotionViewport, varFade } from '../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst CARDS = [\n  {\n    icon: '/static/assets/icons/ic_design.svg',\n    title: 'UI & UX Design',\n    description:\n      'The set is built on the principles of the atomic design system. It helps you to create projects fastest and easily customized packages for your projects.',\n  },\n  {\n    icon: '/static/assets/icons/ic_code.svg',\n    title: 'Development',\n    description: 'Easy to customize and extend each component, saving you time and money.',\n  },\n  {\n    icon: '/static/logo/logo_single.svg',\n    title: 'Branding',\n    description: 'Consistent design in colors, fonts ... makes brand recognition easy.',\n  },\n];\n\nconst shadowIcon = (color) => `drop-shadow(2px 2px 2px ${alpha(color, 0.48)})`;\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  paddingTop: theme.spacing(15),\n  [theme.breakpoints.up('md')]: {\n    paddingBottom: theme.spacing(15),\n  },\n}));\n\nconst CardStyle = styled(Card)(({ theme }) => {\n  const shadowCard = (opacity) =>\n    theme.palette.mode === 'light'\n      ? alpha(theme.palette.grey[500], opacity)\n      : alpha(theme.palette.common.black, opacity);\n\n  return {\n    border: 0,\n    maxWidth: 380,\n    minHeight: 440,\n    margin: 'auto',\n    textAlign: 'center',\n    padding: theme.spacing(10, 5, 0),\n    boxShadow: theme.customShadows.z12,\n    [theme.breakpoints.up('md')]: {\n      boxShadow: 'none',\n      backgroundColor: theme.palette.grey[theme.palette.mode === 'light' ? 200 : 800],\n    },\n    '&.cardLeft': {\n      [theme.breakpoints.up('md')]: { marginTop: -40 },\n    },\n    '&.cardCenter': {\n      [theme.breakpoints.up('md')]: {\n        marginTop: -80,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: `-40px 40px 80px 0 ${shadowCard(0.4)}`,\n        '&:before': {\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          zIndex: -1,\n          content: \"''\",\n          margin: 'auto',\n          position: 'absolute',\n          width: 'calc(100% - 40px)',\n          height: 'calc(100% - 40px)',\n          borderRadius: Number(theme.shape.borderRadius) * 2,\n          backgroundColor: theme.palette.background.paper,\n          boxShadow: `-20px 20px 40px 0 ${shadowCard(0.12)}`,\n        },\n      },\n    },\n  };\n});\n\n// ----------------------------------------------------------------------\n\nexport default function HomeServeConnect() {\n  const theme = useTheme();\n\n  const isLight = theme.palette.mode === 'light';\n\n  return (\n    <RootStyle>\n      <Container component={MotionViewport}>\n        <Box\n          sx={{\n            textAlign: 'center',\n            mb: { xs: 10, md: 25 },\n          }}\n        >\n          <m.div variants={varFade().inUp}>\n            <Typography component=\"div\" variant=\"overline\" sx={{ mb: 2, color: 'text.disabled' }}>\n              Telyza Game\n            </Typography>\n          </m.div>\n          <m.div variants={varFade().inDown}>\n            <Typography variant=\"h2\">What Telyza Game helps you?</Typography>\n          </m.div>\n        </Box>\n\n        <Box\n          sx={{\n            display: 'grid',\n            gap: { xs: 5, lg: 10 },\n            gridTemplateColumns: { xs: 'repeat(1, 1fr)', md: 'repeat(3, 1fr)' },\n          }}\n        >\n          {CARDS.map((card, index) => (\n            <m.div variants={varFade().inUp} key={card.title}>\n              <CardStyle className={(index === 0 && 'cardLeft') || (index === 1 && 'cardCenter') || ''}>\n                <Image\n                  src={card.icon}\n                  alt={card.title}\n                  sx={{\n                    mb: 10,\n                    mx: 'auto',\n                    width: 40,\n                    height: 40,\n                    filter: (theme) => shadowIcon(theme.palette.primary.main),\n                    ...(index === 0 && {\n                      filter: (theme) => shadowIcon(theme.palette.info.main),\n                    }),\n                    ...(index === 1 && {\n                      filter: (theme) => shadowIcon(theme.palette.error.main),\n                    }),\n                  }}\n                />\n                <Typography variant=\"h5\" paragraph>\n                  {card.title}\n                </Typography>\n                <Typography sx={{ color: isLight ? 'text.secondary' : 'common.white' }}>{card.description}</Typography>\n              </CardStyle>\n            </m.div>\n          ))}\n        </Box>\n      </Container>\n    </RootStyle>\n  );\n}\n","import { m } from \"framer-motion\";\n// @mui\nimport { alpha, useTheme, styled } from \"@mui/material/styles\";\nimport { Box, Card, Container, Typography } from \"@mui/material\";\n// components\nimport Image from \"../../components/Image\";\nimport { MotionViewport, varFade } from \"../../components/animate\";\n\n// ----------------------------------------------------------------------\n\nconst CARDS = [\n  {\n    icon: \"/static/icons/ic_ideas.svg\",\n    title: \"Augmentez vos connaissances\",\n    description:\n      \"Plus vous en savez, plus il vous sera facile d'apprendre de nouvelles choses\",\n  },\n  {\n    icon: \"/static/icons/ic_dollar.png\",\n    title: \"Gagner un peu d'argent\",\n    description: \"Plus vous répondez à des questions, plus vous jouez à n'importe quel jeu, plus vous gagnez d'argent.\",\n  },\n  {\n    icon: \"/static/icons/ic_friendly.png\",\n    title: \"Connexion conviviale\",\n    description:\n      \"Si vous cherchez simplement des jeux pour vous divertir, nous vous avons couvert.\",\n  },\n];\n\nconst shadowIcon = (color) => `drop-shadow(2px 2px 2px ${alpha(color, 0.48)})`;\n\nconst RootStyle = styled(\"div\")(({ theme }) => ({\n  paddingTop: theme.spacing(15),\n  [theme.breakpoints.up(\"md\")]: {\n    paddingBottom: theme.spacing(15),\n  },\n}));\n\nconst CardStyle = styled(Card)(({ theme }) => {\n  const shadowCard = (opacity) =>\n    theme.palette.mode === \"light\"\n      ? alpha(theme.palette.grey[500], opacity)\n      : alpha(theme.palette.common.black, opacity);\n\n  return {\n    border: 0,\n    maxWidth: 380,\n    minHeight: 340,\n    margin: \"auto\",\n    textAlign: \"center\",\n    padding: theme.spacing(10, 5, 0),\n    boxShadow: theme.customShadows.z12,\n    [theme.breakpoints.up(\"md\")]: {\n      boxShadow: \"none\",\n      // backgroundColor: theme.palette.grey[theme.palette.mode === 'light' ? 200 : 800],\n    },\n    \"&.cardLeft\": {\n      [theme.breakpoints.up(\"md\")]: {},\n    },\n    \"&.cardCenter\": {\n      [theme.breakpoints.up(\"md\")]: {\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: `-40px 40px 60px 0 ${shadowCard(0.2)}`,\n        \"&:before\": {\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          zIndex: -1,\n          content: \"''\",\n          margin: \"auto\",\n          position: \"absolute\",\n          width: \"calc(100% - 40px)\",\n          height: \"calc(100% - 40px)\",\n          borderRadius: Number(theme.shape.borderRadius) * 2,\n          backgroundColor: theme.palette.background.paper,\n        },\n      },\n    },\n    \"&.cardRight\": {\n      [theme.breakpoints.up(\"md\")]: {},\n    },\n  };\n});\n\n// ----------------------------------------------------------------------\n\nexport default function HomeTely() {\n  const theme = useTheme();\n\n  const isLight = theme.palette.mode === \"light\";\n\n  return (\n    <RootStyle>\n      <Container component={MotionViewport}>\n        <Box\n          sx={{\n            textAlign: \"center\",\n            mb: { xs: 5, md: 15 },\n          }}\n        >\n          <m.div variants={varFade().inUp}>\n            <Typography\n              component=\"div\"\n              variant=\"overline\"\n              sx={{ mb: 2, color: \"text.disabled\" }}\n            >\n              Telyza Game\n            </Typography>\n          </m.div>\n          <m.div variants={varFade().inDown}>\n            <Typography variant=\"h2\">Que vous propose Telyza Game ?</Typography>\n          </m.div>\n        </Box>\n\n        <Box\n          sx={{\n            display: \"grid\",\n            gap: { xs: 5, lg: 10 },\n            gridTemplateColumns: { xs: \"repeat(1, 1fr)\", md: \"repeat(3, 1fr)\" },\n          }}\n        >\n          {CARDS.map((card, index) => (\n            <m.div variants={varFade().inUp} key={card.title}>\n              <CardStyle\n                className={\n                  (index === 0 && \"cardLeft\") ||\n                  (index === 1 && \"cardCenter\") ||\n                  \"cardRight\"\n                }\n              >\n                <Image\n                  src={card.icon}\n                  alt={card.title}\n                  sx={{\n                    mb: 6,\n                    mx: \"auto\",\n                    width: 40,\n                    height: 40,\n                    filter: (theme) => shadowIcon(theme.palette.primary.main),\n                    ...(index === 0 && {\n                      filter: (theme) => shadowIcon(theme.palette.info.main),\n                    }),\n                    ...(index === 1 && {\n                      filter: (theme) => shadowIcon(theme.palette.error.main),\n                    }),\n                  }}\n                />\n                <Typography variant=\"h5\" paragraph>\n                  {card.title}\n                </Typography>\n                <Typography\n                  sx={{ color: isLight ? \"text.secondary\" : \"common.white\" }}\n                >\n                  {card.description}\n                </Typography>\n              </CardStyle>\n            </m.div>\n          ))}\n        </Box>\n      </Container>\n    </RootStyle>\n  );\n}\n","import { m } from \"framer-motion\";\n// @mui\nimport { alpha, useTheme, styled } from \"@mui/material/styles\";\nimport { Box, Grid, Container, Typography } from \"@mui/material\";\n// components\nimport Image from \"../../components/Image\";\nimport { MotionViewport, varFade } from \"../../components/animate\";\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(28, 0),\n  backgroundColor: theme.palette.grey[900],\n}));\n\nconst ContentStyle = styled(\"div\")(({ theme }) => ({\n  textAlign: \"center\",\n  position: \"relative\",\n  marginBottom: theme.spacing(10),\n  [theme.breakpoints.up(\"md\")]: {\n    height: \"100%\",\n    marginBottom: 0,\n    textAlign: \"left\",\n    display: \"inline-flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n  },\n}));\n\nconst ScreenStyle = styled(m.div)(({ theme }) => ({\n  paddingRight: 2,\n  paddingBottom: 1,\n  borderRadius: 8,\n  [theme.breakpoints.up(\"sm\")]: {\n    maxWidth: 320,\n    paddingRight: 4,\n    borderRadius: 12,\n  },\n  \"& img\": {\n    borderRadius: 8,\n    [theme.breakpoints.up(\"sm\")]: {\n      borderRadius: 12,\n    },\n  },\n}));\n\nconst COMMON = {\n  scaleX: 0.86,\n  skewY: 8,\n  skewX: 0,\n  scaleY: 1,\n  translateX: 0,\n  translateY: 0,\n  opacity: 0,\n};\n\nconst variantScreenLeft = {\n  initial: COMMON,\n  animate: { ...COMMON, translateX: \"-50%\", translateY: 40, opacity: 1 },\n};\nconst variantScreenCenter = {\n  initial: COMMON,\n  animate: { ...COMMON, opacity: 1 },\n};\nconst variantScreenRight = {\n  initial: COMMON,\n  animate: { ...COMMON, translateX: \"50%\", translateY: -40, opacity: 1 },\n};\n\n// ----------------------------------------------------------------------\n\nexport default function HomeDarkMode() {\n  const theme = useTheme();\n\n  const isLight = theme.palette.mode === \"light\";\n\n  const isRTL = theme.direction === \"rtl\";\n\n  const screenLeftAnimate = variantScreenLeft;\n\n  const screenCenterAnimate = variantScreenCenter;\n\n  const screenRightAnimate = variantScreenRight;\n\n  return (\n    <RootStyle>\n      <Container component={MotionViewport} sx={{ position: \"relative\" }}>\n        <Image\n          visibleByDefault\n          disabledEffect\n          alt=\"image shape\"\n          src=\"/static/assets/home/shape.svg\"\n          sx={{\n            top: 0,\n            right: 0,\n            bottom: 0,\n            width: 720,\n            height: 720,\n            opacity: 0.48,\n            my: \"auto\",\n            position: \"absolute\",\n            display: { xs: \"none\", md: \"block\" },\n          }}\n        />\n\n        <Grid\n          container\n          spacing={5}\n          direction=\"row-reverse\"\n          justifyContent=\"space-between\"\n        >\n          <Grid item xs={12} md={4}>\n            <ContentStyle>\n              <m.div variants={varFade().inUp}>\n                <Typography\n                  component=\"div\"\n                  variant=\"overline\"\n                  sx={{ mb: 2, color: \"text.disabled\" }}\n                >\n                  Easy switch between styles.\n                </Typography>\n              </m.div>\n\n              <m.div variants={varFade().inUp}>\n                <Typography variant=\"h2\" sx={{ mb: 3, color: \"common.white\" }}>\n                  Dark mode\n                </Typography>\n              </m.div>\n\n              <m.div variants={varFade().inUp}>\n                <Typography sx={{ color: \"common.white\", mb: 5 }}>\n                  A dark theme that feels easier on the eyes.\n                </Typography>\n              </m.div>\n            </ContentStyle>\n          </Grid>\n\n          <Grid item xs={12} md={7} sx={{ position: \"relative\" }}>\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                position: \"relative\",\n                justifyContent: \"center\",\n              }}\n            >\n              {[...Array(3)].map((_, index) => (\n                <ScreenStyle\n                  key={index}\n                  variants={{\n                    ...(index === 0 && screenLeftAnimate),\n                    ...(index === 1 && screenCenterAnimate),\n                    ...(index === 2 && screenRightAnimate),\n                  }}\n                  transition={{ duration: 0.72, ease: \"easeOut\" }}\n                  sx={{\n                    backgroundColor:\n                      theme.palette.grey[\n                        index === 1 ? 300 : 800\n                      ],\n                    boxShadow: `${isRTL ? -80 : 80}px -40px 80px ${alpha(\n                      isLight\n                        ? theme.palette.grey[600]\n                        : theme.palette.common.black,\n                      0.48\n                    )}`,\n                    ...(index === 0 && {\n                      zIndex: 3,\n                      position: \"absolute\",\n                    }),\n                    ...(index === 1 && { zIndex: 2 }),\n                    ...(index === 2 && {\n                      zIndex: 1,\n                      position: \"absolute\",\n                      boxShadow: \"none\",\n                    }),\n                  }}\n                >\n                  <Image\n                    disabledEffect\n                    alt={`screen ${index + 1}`}\n                    src={`/static/assets/home/lightmode${index + 1}.png`}\n                  />\n                </ScreenStyle>\n              ))}\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n    </RootStyle>\n  );\n}\n","import { m } from \"framer-motion\";\n// @mui\nimport { alpha, useTheme, styled } from \"@mui/material/styles\";\nimport { Box, Button, Container, Typography, Grid } from \"@mui/material\";\n// components\nimport Image from \"../../components/Image\";\nimport Iconify from \"../../components/Iconify\";\nimport { MotionViewport, varFade } from \"../../components/animate\";\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(10, 0),\n  [theme.breakpoints.up(\"md\")]: {\n    padding: theme.spacing(15, 0),\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function HomeLookingFor() {\n  const theme = useTheme();\n  const isLight = theme.palette.mode === \"light\";\n  const shadow = `-40px 40px 80px ${alpha(\n    isLight ? theme.palette.grey[500] : theme.palette.common.black,\n    0.48\n  )}`;\n  return (\n    <RootStyle>\n      <Container component={MotionViewport}>\n        <Grid\n          container\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          spacing={{ xs: 8, md: 3 }}\n        >\n          <Grid item xs={12} md={7}>\n            <Box\n              component={m.div}\n              variants={varFade().inUp}\n              sx={{\n                mb: { xs: 3, md: 0 },\n              }}\n            >\n              <Image\n                alt=\"rocket\"\n                src=\"/static/assets/home/affiliate.jpg\"\n                ratio=\"4/3\"\n                sx={{\n                  borderRadius: 2,\n                  boxShadow: shadow,\n                }}\n              />\n            </Box>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            md={4}\n            sx={{ textAlign: { xs: \"center\", md: \"left\" } }}\n          >\n            <m.div variants={varFade().inDown}>\n              <Typography\n                variant=\"overline\"\n                component=\"div\"\n                sx={{ color: \"text.disabled\" }}\n              >\n                how it works\n              </Typography>\n            </m.div>\n\n            <m.div variants={varFade().inDown}>\n              <Typography variant=\"h2\" sx={{ mt: 2, mb: 5 }}>\n                Telyza Game Affiliation?\n              </Typography>\n            </m.div>\n\n            <m.div variants={varFade().inUp}>\n              <Typography\n                sx={{\n                  mb: 5,\n                  color: isLight ? \"text.secondary\" : \"common.white\",\n                }}\n              >\n                Telyza Game Affiliation is a program that allows users to earn\n                money by recommending Telyza Game to others. When affiliate users\n                successfully refer Telyza Game to new users who sign up and play,\n                they can earn a commission or rewards based on the activity of\n                the referred users. It is a way to reward users for their\n                contribution to the growth of the Telyza Game community by bringing\n                in new players. The affiliate program provides an opportunity to\n                earn extra money by encouraging the promotion of Telyza Game.\n              </Typography>\n            </m.div>\n\n            <m.div variants={varFade().inDown}>\n              <Button\n                color=\"inherit\"\n                size=\"large\"\n                variant=\"outlined\"\n                href=\"#/conditions-affiliation\"\n                endIcon={<Iconify icon={\"ic:round-arrow-right-alt\"} />}\n              >\n                Membership Terms\n              </Button>\n            </m.div>\n          </Grid>\n        </Grid>\n      </Container>\n    </RootStyle>\n  );\n}\n","import { capitalCase } from 'change-case';\nimport { m } from 'framer-motion';\n// @mui\nimport { styled, alpha } from '@mui/material/styles';\nimport {\n  Box,\n  Stack,\n  Radio,\n  Tooltip,\n  Container,\n  Typography,\n  RadioGroup,\n  CardActionArea,\n  FormControlLabel,\n} from '@mui/material';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Image from '../../components/Image';\nimport { MotionViewport, varFade } from '../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  padding: theme.spacing(15, 0),\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function HomeColorPresets() {\n  const { themeColorPresets, onChangeColor, colorOption } = useSettings();\n\n  return (\n    <RootStyle>\n      <Container component={MotionViewport} sx={{ position: 'relative', textAlign: 'center' }}>\n        <m.div variants={varFade().inUp}>\n          <Typography component=\"div\" variant=\"overline\" sx={{ mb: 2, color: 'text.disabled' }}>\n            choose your style\n          </Typography>\n        </m.div>\n\n        <m.div variants={varFade().inUp}>\n          <Typography variant=\"h2\" sx={{ mb: 3 }}>\n            Color presets\n          </Typography>\n        </m.div>\n\n        <m.div variants={varFade().inUp}>\n          <Typography\n            sx={{\n              color: (theme) => (theme.palette.mode === 'light' ? 'text.secondary' : 'text.primary'),\n            }}\n          >\n            Express your own style with just one click.\n          </Typography>\n        </m.div>\n\n        <RadioGroup name=\"themeColorPresets\" value={themeColorPresets} onChange={onChangeColor} sx={{ my: 5 }}>\n          <Stack\n            direction={{ xs: 'row', lg: 'column' }}\n            justifyContent=\"center\"\n            spacing={1}\n            sx={{\n              position: { lg: 'absolute' },\n              right: { lg: 0 },\n            }}\n          >\n            {colorOption.map((color) => {\n              const colorName = color.name;\n              const colorValue = color.value;\n              const isSelected = themeColorPresets === colorName;\n\n              return (\n                <Tooltip key={colorName} title={capitalCase(colorName)} placement=\"right\">\n                  <CardActionArea sx={{ color: colorValue, borderRadius: '50%', width: 32, height: 32 }}>\n                    <Box\n                      sx={{\n                        width: 1,\n                        height: 1,\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        borderRadius: '50%',\n                        ...(isSelected && {\n                          borderStyle: 'solid',\n                          borderWidth: 4,\n                          borderColor: alpha(colorValue, 0.24),\n                        }),\n                      }}\n                    >\n                      <Box\n                        sx={{\n                          width: 10,\n                          height: 10,\n                          borderRadius: '50%',\n                          bgcolor: colorValue,\n                          ...(isSelected && {\n                            width: 14,\n                            height: 14,\n                            transition: (theme) =>\n                              theme.transitions.create('all', {\n                                easing: theme.transitions.easing.easeInOut,\n                                duration: theme.transitions.duration.shorter,\n                              }),\n                          }),\n                        }}\n                      />\n                      <FormControlLabel\n                        label=\"\"\n                        value={colorName}\n                        control={<Radio sx={{ display: 'none' }} />}\n                        sx={{\n                          top: 0,\n                          left: 0,\n                          margin: 0,\n                          width: 1,\n                          height: 1,\n                          position: 'absolute',\n                        }}\n                      />\n                    </Box>\n                  </CardActionArea>\n                </Tooltip>\n              );\n            })}\n          </Stack>\n        </RadioGroup>\n\n        <Box sx={{ position: 'relative' }}>\n          <Image\n            disabledEffect\n            alt=\"grid\"\n            src=\"/static/assets/home/theme-color/grid.png\"\n          />\n\n          <Box sx={{ position: 'absolute', top: 0 }}>\n            <m.div variants={varFade().inUp}>\n              <Image\n                disabledEffect\n                alt=\"screen\"\n                src={`/static/assets/home/theme-color/screen-${themeColorPresets}.png`}\n              />\n            </m.div>\n          </Box>\n\n          <Box sx={{ position: 'absolute', top: 0 }}>\n            <m.div variants={varFade().inDown}>\n              <m.div animate={{ y: [0, -15, 0] }} transition={{ duration: 8, repeat: Infinity }}>\n                <Image\n                  disabledEffect\n                  alt=\"sidebar\"\n                  src={`/static/assets/home/theme-color/block1-${themeColorPresets}.png`}\n                />\n              </m.div>\n            </m.div>\n          </Box>\n\n          <Box sx={{ position: 'absolute', top: 0 }}>\n            <m.div variants={varFade().inDown}>\n              <m.div animate={{ y: [-5, 10, -5] }} transition={{ duration: 8, repeat: Infinity }}>\n                <Image\n                  disabledEffect\n                  alt=\"sidebar\"\n                  src={`/static/assets/home/theme-color/block2-${themeColorPresets}.png`}\n                />\n              </m.div>\n            </m.div>\n          </Box>\n\n          <Box sx={{ position: 'absolute', top: 0 }}>\n            <m.div variants={varFade().inDown}>\n              <m.div animate={{ y: [-25, 5, -25] }} transition={{ duration: 10, repeat: Infinity }}>\n                <Image\n                  disabledEffect\n                  alt=\"sidebar\"\n                  src={`/static/assets/home/theme-color/sidebar-${themeColorPresets}.png`}\n                />\n              </m.div>\n            </m.div>\n          </Box>\n        </Box>\n      </Container>\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { m } from 'framer-motion';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Grid, Card, Link, Stack, Button, Divider, Container, Typography } from '@mui/material';\n// _mock_\nimport { _homePlans } from '../../_mock';\n// components\nimport Image from '../../components/Image';\nimport Iconify from '../../components/Iconify';\nimport { varFade, MotionViewport } from '../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  padding: theme.spacing(10, 0),\n  backgroundColor: theme.palette.background.neutral,\n  [theme.breakpoints.up('md')]: {\n    padding: theme.spacing(15, 0),\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function HomePricingPlans() {\n  const theme = useTheme();\n\n  const isLight = theme.palette.mode === 'light';\n\n  return (\n    <RootStyle>\n      <Container component={MotionViewport}>\n        <Box sx={{ mb: 10, textAlign: 'center' }}>\n          <m.div variants={varFade().inUp}>\n            <Typography component=\"div\" variant=\"overline\" sx={{ mb: 2, color: 'text.disabled' }}>\n              pricing plans\n            </Typography>\n          </m.div>\n          <m.div variants={varFade().inDown}>\n            <Typography variant=\"h2\" sx={{ mb: 3 }}>\n              The right plan for your business\n            </Typography>\n          </m.div>\n          <m.div variants={varFade().inDown}>\n            <Typography\n              sx={{\n                color: isLight ? 'text.secondary' : 'text.primary',\n              }}\n            >\n              Choose the perfect plan for your needs. Always flexible to grow\n            </Typography>\n          </m.div>\n        </Box>\n\n        <Grid container spacing={5}>\n          {_homePlans.map((plan) => (\n            <Grid key={plan.license} item xs={12} md={4}>\n              <m.div variants={plan.license === 'Standard Plus' ? varFade().inDown : varFade().inUp}>\n                <PlanCard plan={plan} />\n              </m.div>\n            </Grid>\n          ))}\n        </Grid>\n\n        <m.div variants={varFade().in}>\n          <Box sx={{ p: 5, mt: 10, textAlign: 'center' }}>\n            <m.div variants={varFade().inDown}>\n              <Typography variant=\"h3\">Still have questions?</Typography>\n            </m.div>\n\n            <m.div variants={varFade().inDown}>\n              <Typography sx={{ mt: 3, mb: 5, color: 'text.secondary' }}>\n                Please describe your case to receive the most accurate advice.\n              </Typography>\n            </m.div>\n\n            <m.div variants={varFade().inUp}>\n              <Button\n                size=\"large\"\n                variant=\"contained\"\n                href=\"mailto:info@telyzagame.com?subject=[Feedback] from Customer\"\n              >\n                Contact us\n              </Button>\n            </m.div>\n          </Box>\n        </m.div>\n      </Container>\n    </RootStyle>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nPlanCard.propTypes = {\n  plan: PropTypes.shape({\n    license: PropTypes.string,\n    commons: PropTypes.arrayOf(PropTypes.string),\n    icons: PropTypes.arrayOf(PropTypes.string),\n    options: PropTypes.arrayOf(PropTypes.string),\n  }),\n};\n\nfunction PlanCard({ plan }) {\n  const { license, commons, options, icons } = plan;\n\n  const standard = license === 'Standard';\n  const plus = license === 'Standard Plus';\n\n  return (\n    <Card\n      sx={{\n        p: 5,\n        boxShadow: 0,\n        ...(plus && {\n          boxShadow: (theme) => theme.customShadows.z24,\n        }),\n      }}\n    >\n      <Stack spacing={5}>\n        <div>\n          <Typography variant=\"overline\" component=\"div\" sx={{ mb: 2, color: 'text.disabled' }}>\n            LICENSE\n          </Typography>\n          <Typography variant=\"h4\">{license}</Typography>\n        </div>\n\n        {standard ? (\n          <Image alt=\"package\" src={icons[2]} sx={{ width: 40, height: 40 }} />\n        ) : (\n          <Stack direction=\"row\" spacing={1}>\n            {icons.map((icon) => (\n              <Image key={icon} alt=\"package\" src={icon} sx={{ width: 40, height: 40 }} />\n            ))}\n          </Stack>\n        )}\n\n        <Stack spacing={2.5}>\n          {commons.map((option) => (\n            <Stack key={option} spacing={1.5} direction=\"row\" alignItems=\"center\">\n              <Iconify icon={'eva:checkmark-fill'} sx={{ color: 'primary.main', width: 20, height: 20 }} />\n              <Typography variant=\"body2\">{option}</Typography>\n            </Stack>\n          ))}\n\n          <Divider sx={{ borderStyle: 'dashed' }} />\n\n          {options.map((option, optionIndex) => {\n            const disabledLine =\n              (standard && optionIndex === 1) ||\n              (standard && optionIndex === 2) ||\n              (standard && optionIndex === 3) ||\n              (plus && optionIndex === 3);\n\n            return (\n              <Stack\n                spacing={1.5}\n                direction=\"row\"\n                alignItems=\"center\"\n                sx={{\n                  ...(disabledLine && { color: 'text.disabled' }),\n                }}\n                key={option}\n              >\n                <Iconify\n                  icon={'eva:checkmark-fill'}\n                  sx={{\n                    width: 20,\n                    height: 20,\n                    color: 'primary.main',\n                    ...(disabledLine && { color: 'text.disabled' }),\n                  }}\n                />\n                <Typography variant=\"body2\">{option}</Typography>\n              </Stack>\n            );\n          })}\n        </Stack>\n\n        <Stack direction=\"row\" justifyContent=\"flex-end\">\n          <Link\n            color=\"text.secondary\"\n            underline=\"always\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            href=\"#\"\n            sx={{ typography: 'body2', display: 'flex', alignItems: 'center' }}\n          >\n            Learn more <Iconify icon={'eva:chevron-right-fill'} width={20} height={20} />\n          </Link>\n        </Stack>\n\n        <Button\n          size=\"large\"\n          fullWidth\n          variant={plus ? 'contained' : 'outlined'}\n          href=\"#\"\n        >\n          Choose Plan\n        </Button>\n      </Stack>\n    </Card>\n  );\n}\n","import { m } from \"framer-motion\";\nimport { Link as RouterLink } from \"react-router-dom\";\n// @mui\nimport { styled } from \"@mui/material/styles\";\nimport { Button, Box, Container, Typography } from \"@mui/material\";\nimport { PATH_AUTH } from \"../../routes/paths\";\n// components\nimport Image from \"../../components/Image\";\nimport { MotionViewport, varFade } from \"../../components/animate\";\n\n// ----------------------------------------------------------------------\n\nconst ContentStyle = styled(\"div\")(({ theme }) => ({\n  maxWidth: 456,\n  margin: \"auto\",\n  overflow: \"hidden\",\n  paddingBottom: theme.spacing(10),\n  borderRadius: Number(theme.shape.borderRadius) * 2,\n  backgroundImage: `linear-gradient(135deg,\n    ${theme.palette.primary.main} 0%,\n    ${theme.palette.primary.dark} 100%)`,\n  [theme.breakpoints.up(\"md\")]: {\n    display: \"flex\",\n    maxWidth: \"100%\",\n    paddingBottom: 0,\n    alignItems: \"center\",\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function HomeAdvertisement() {\n  return (\n    <Container component={MotionViewport}>\n      <br />\n      <br />\n      <ContentStyle>\n        <Box\n          component={m.div}\n          variants={varFade().inUp}\n          sx={{\n            mb: { xs: 3, md: 0 },\n          }}\n        >\n          <m.div\n            animate={{ y: [-20, 0, -20] }}\n            transition={{ duration: 4, repeat: Infinity }}\n          >\n            <Image\n              visibleByDefault\n              alt=\"rocket\"\n              src=\"/static/assets/home/rocket.png\"\n              disabledEffect\n              sx={{ maxWidth: 460 }}\n            />\n          </m.div>\n        </Box>\n\n        <Box\n          sx={{\n            pl: { md: 5 },\n            textAlign: { xs: \"center\", md: \"left\" },\n          }}\n        >\n          <Box\n            component={m.div}\n            variants={varFade().inDown}\n            sx={{ color: \"common.white\", mb: 5 }}\n          >\n            <Typography variant=\"h2\">\n              Commencer avec\n              <br /> Telyza Game maintenant\n            </Typography>\n          </Box>\n          <m.div variants={varFade().inDown}>\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              component={RouterLink}\n              to={PATH_AUTH.login}\n              sx={{\n                whiteSpace: \"nowrap\",\n                boxShadow: (theme) => theme.customShadows.z8,\n                color: (theme) =>\n                  theme.palette.getContrastText(theme.palette.common.white),\n                bgcolor: \"common.white\",\n                \"&:hover\": { bgcolor: \"grey.300\" },\n              }}\n            >\n              Commencer\n            </Button>\n          </m.div>\n        </Box>\n      </ContentStyle>\n    </Container>\n  );\n}\n","import { m } from 'framer-motion';\n// @mui\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Container, Typography, useTheme } from '@mui/material';\n// components\nimport Image from '../../components/Image';\nimport { MotionViewport, varFade } from '../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst IMG = [...Array(10)].map(\n  (_, index) => `/static/assets/home/clean-${index + 1}.png`\n);\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  paddingTop: theme.spacing(15),\n  paddingBottom: theme.spacing(10),\n}));\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  maxWidth: 520,\n  margin: 'auto',\n  textAlign: 'center',\n  [theme.breakpoints.up('md')]: {\n    zIndex: 11,\n    textAlign: 'left',\n    position: 'absolute',\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function HomeCleanInterfaces() {\n  const theme = useTheme();\n\n  const isLight = theme.palette.mode === 'light';\n\n  return (\n    <RootStyle>\n      <Container component={MotionViewport}>\n        <ContentStyle>\n          <m.div variants={varFade().inUp}>\n            <Typography component=\"div\" variant=\"overline\" sx={{ mb: 2, color: 'text.disabled' }}>\n              clean & clear\n            </Typography>\n          </m.div>\n\n          <m.div variants={varFade().inUp}>\n            <Typography\n              variant=\"h2\"\n              paragraph\n              sx={{\n                ...(!isLight && {\n                  textShadow: (theme) => `4px 4px 16px ${alpha(theme.palette.grey[800], 0.48)}`,\n                }),\n              }}\n            >\n              Beautiful, modern and clean user interfaces\n            </Typography>\n          </m.div>\n        </ContentStyle>\n\n        <Box sx={{ position: 'relative' }}>\n          {IMG.map((_, index) => (\n            <Box\n              key={index}\n              component={m.div}\n              variants={varFade().inUp}\n              sx={{\n                top: 0,\n                left: 0,\n                position: 'absolute',\n                ...(index === 0 && { zIndex: 8 }),\n                ...(index === 9 && { position: 'relative', zIndex: 9 }),\n              }}\n            >\n              <Image\n                disabledEffect\n                visibleByDefault\n                alt={`clean-${index + 1}`}\n                src={`/static/assets/home/clean-${index + 1}.png`}\n              />\n            </Box>\n          ))}\n        </Box>\n      </Container>\n    </RootStyle>\n  );\n}\n","import { m } from \"framer-motion\";\nimport { Link as RouterLink } from \"react-router-dom\";\n// @mui\nimport { alpha, useTheme, styled } from \"@mui/material/styles\";\nimport { Box, Grid, Button, Container, Typography } from \"@mui/material\";\nimport { PATH_AUTH } from \"../../routes/paths\";\n// components\nimport Image from \"../../components/Image\";\nimport { MotionViewport, varFade } from \"../../components/animate\";\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(24, 0),\n}));\n\nconst ContentStyle = styled(\"div\")(({ theme }) => ({\n  width: \"100%\",\n  textAlign: \"center\",\n  marginBottom: theme.spacing(10),\n  [theme.breakpoints.up(\"md\")]: {\n    textAlign: \"left\",\n    marginBottom: 0,\n  },\n}));\n\nconst ScreenStyle = styled(m.div)(({ theme }) => ({\n  paddingRight: 2,\n  paddingBottom: 1,\n  maxWidth: 160,\n  borderRadius: 8,\n  backgroundColor:\n    theme.palette.grey[\n      !theme.palette.mode === \"blue\"\n        ? theme.palette.mode === \"light\"\n          ? 300\n          : 800\n        : 300\n    ],\n  [theme.breakpoints.up(\"sm\")]: {\n    maxWidth: 320,\n    paddingRight: 4,\n    borderRadius: 12,\n  },\n  \"& img\": {\n    borderRadius: 8,\n    [theme.breakpoints.up(\"sm\")]: {\n      borderRadius: 12,\n    },\n  },\n}));\n\nconst COMMON = {\n  scaleX: 0.86,\n  skewY: 8,\n  skewX: 0,\n  scaleY: 1,\n  translateX: 0,\n  translateY: 0,\n  opacity: 0,\n};\n\nconst variantScreenLeft = {\n  initial: COMMON,\n  animate: { ...COMMON, translateX: \"-50%\", translateY: 40, opacity: 1 },\n};\nconst variantScreenCenter = {\n  initial: COMMON,\n  animate: { ...COMMON, opacity: 1 },\n};\nconst variantScreenRight = {\n  initial: COMMON,\n  animate: { ...COMMON, translateX: \"50%\", translateY: -40, opacity: 1 },\n};\n\n// ----------------------------------------------------------------------\n\nexport default function HomeHugePackElements() {\n  const theme = useTheme();\n\n  const isLight = theme.palette.mode === \"light\";\n  const isBlue = theme.palette.mode === \"blue\";\n\n  const isRTL = theme.direction === \"rtl\";\n\n  const screenLeftAnimate = variantScreenLeft;\n\n  const screenCenterAnimate = variantScreenCenter;\n\n  const screenRightAnimate = variantScreenRight;\n\n  return (\n    <RootStyle>\n      <Container component={MotionViewport}>\n        <Grid container spacing={5} justifyContent=\"center\">\n          <Grid\n            item\n            xs={12}\n            md={4}\n            sx={{ display: \"flex\", alignItems: \"center\" }}\n          >\n            <ContentStyle>\n              <m.div variants={varFade().inUp}>\n                <Typography\n                  component=\"div\"\n                  variant=\"overline\"\n                  sx={{ mb: 2, color: \"text.disabled\" }}\n                >\n                  Telyza Game\n                </Typography>\n              </m.div>\n\n              <m.div variants={varFade().inUp}>\n                <Typography variant=\"h2\" sx={{ mb: 3 }}>\n                  Comment ça <br />\n                  marche ?\n                </Typography>\n              </m.div>\n\n              <m.div variants={varFade().inUp}>\n                <Typography\n                  sx={{\n                    mb: 5,\n                    color: !isBlue\n                      ? isLight\n                        ? \"text.secondary\"\n                        : \"common.white\"\n                      : \"common.white\",\n                  }}\n                >\n                  Il vous suffira simplement de créer un compte sur la\n                  plateforme et de démarrer une partie. Vous devrez surmonter\n                  l'objectif des jeux pour remporter les cagnottes. C'est simple\n                  et amusant !\n                </Typography>\n              </m.div>\n\n              <m.div variants={varFade().inUp}>\n                <Button\n                  size=\"large\"\n                  color=\"inherit\"\n                  variant=\"outlined\"\n                  component={RouterLink}\n                  to={PATH_AUTH.register}\n                >\n                  S'inscrire maintenant\n                </Button>\n              </m.div>\n            </ContentStyle>\n          </Grid>\n\n          <Grid item xs={12} md={8} dir=\"ltr\">\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                position: \"relative\",\n                justifyContent: \"center\",\n              }}\n            >\n              {[...Array(3)].map((_, index) => (\n                <ScreenStyle\n                  key={index}\n                  variants={{\n                    ...(index === 0 && screenLeftAnimate),\n                    ...(index === 1 && screenCenterAnimate),\n                    ...(index === 2 && screenRightAnimate),\n                  }}\n                  transition={{ duration: 0.72, ease: \"easeOut\" }}\n                  sx={{\n                    boxShadow: `${isRTL ? -80 : 80}px -40px 80px ${alpha(\n                      !isBlue\n                        ? isLight\n                          ? theme.palette.grey[600]\n                          : theme.palette.common.black\n                        : theme.palette.grey[600],\n                      0.48\n                    )}`,\n                    ...(index === 0 && {\n                      zIndex: 3,\n                      position: \"absolute\",\n                    }),\n                    ...(index === 1 && { zIndex: 2 }),\n                    ...(index === 2 && {\n                      zIndex: 1,\n                      position: \"absolute\",\n                      boxShadow: \"none\",\n                    }),\n                  }}\n                >\n                  <Image\n                    disabledEffect\n                    alt={`screen ${index + 1}`}\n                    src={`/static/assets/home/screen_${\n                      isLight ? \"light\" : \"dark\"\n                    }_${index + 1}.png`}\n                  />\n                </ScreenStyle>\n              ))}\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n    </RootStyle>\n  );\n}\n","// @mui\nimport { styled } from '@mui/material/styles';\n// components\nimport Page from '../components/Page';\n// sections\nimport {\n  HomeHero,\n  HomeServeConnect,\n  HomeDarkMode,\n  HomeLookingFor,\n  HomeColorPresets,\n  HomePricingPlans,\n  HomeAdvertisement,\n  HomeCleanInterfaces,\n  HomeHugePackElements,\n} from '../sections/home';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(() => ({\n  height: '100%',\n}));\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  overflow: 'hidden',\n  position: 'relative',\n  backgroundColor: theme.palette.background.default,\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function HomePage() {\n  return (\n    <Page title=\"Home\">\n      <RootStyle>\n        <HomeHero />\n        {/* <ContentStyle> */}\n          {/* <HomeServeConnect /> */}\n\n          {/* <HomeHugePackElements /> */}\n\n          {/* <HomePricingPlans /> */}\n\n          {/* <HomeLookingFor /> */}\n\n          {/* <HomeAdvertisement /> */}\n        {/* </ContentStyle> */}\n      </RootStyle>\n    </Page>\n  );\n}\n"],"names":["RootStyle","styled","m","div","_ref","theme","position","breakpoints","up","top","left","width","height","display","alignItems","ContentStyle","props","_jsx","Stack","_objectSpread","spacing","_ref2","zIndex","maxWidth","margin","textAlign","paddingTop","paddingBottom","HeroImgStyle","img","_ref3","right","bottom","HeroImg2Style","_ref4","HomeHero","isDesktop","useResponsive","_jsxs","MotionContainer","children","alt","src","variants","varFade","inUp","Container","inRight","Typography","variant","sx","color","TextAnimate","text","inDown","Button","size","component","RouterLink","to","PATH_AUTH","login","startIcon","Iconify","icon","Box","md","Card","shadowCard","opacity","palette","mode","alpha","grey","common","black","border","minHeight","padding","boxShadow","customShadows","z12","backgroundColor","marginTop","background","paper","concat","content","borderRadius","Number","shape","marginBottom","flexDirection","justifyContent","paddingRight","COMMON","scaleX","skewY","skewX","scaleY","translateX","translateY","neutral","overflow","backgroundImage","primary","main","dark","Array","map","_","index","default","HomePage","Page","title"],"sourceRoot":""}