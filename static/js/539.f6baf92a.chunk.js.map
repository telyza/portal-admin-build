{"version":3,"file":"static/js/539.f6baf92a.chunk.js","mappings":"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","sources":["sections/auth/verify-code/VerifyCodeForm.js","pages/auth/VerifyCode.js"],"sourcesContent":["import * as Yup from 'yup';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\n// form\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { OutlinedInput, Stack } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n\n// ----------------------------------------------------------------------\n\nexport default function VerifyCodeForm() {\n  const navigate = useNavigate();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const VerifyCodeSchema = Yup.object().shape({\n    code1: Yup.string().required('Code is required'),\n    code2: Yup.string().required('Code is required'),\n    code3: Yup.string().required('Code is required'),\n    code4: Yup.string().required('Code is required'),\n    code5: Yup.string().required('Code is required'),\n    code6: Yup.string().required('Code is required'),\n  });\n\n  const defaultValues = {\n    code1: '',\n    code2: '',\n    code3: '',\n    code4: '',\n    code5: '',\n    code6: '',\n  };\n\n  const {\n    watch,\n    control,\n    setValue,\n    handleSubmit,\n    formState: { isSubmitting, isValid },\n  } = useForm({\n    mode: 'onBlur',\n    resolver: yupResolver(VerifyCodeSchema),\n    defaultValues,\n  });\n\n  const values = watch();\n\n  useEffect(() => {\n    document.addEventListener('paste', handlePasteClipboard);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onSubmit = async (data) => {\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      console.log('code:', Object.values(data).join(''));\n\n      enqueueSnackbar('Verify success!');\n\n      navigate(PATH_DASHBOARD.root, { replace: true });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handlePasteClipboard = (event) => {\n    let data = event?.clipboardData?.getData('Text') || '';\n\n    data = data.split('');\n\n    [].forEach.call(document.querySelectorAll('#field-code'), (node, index) => {\n      node.value = data[index];\n      const fieldIndex = `code${index + 1}`;\n      setValue(fieldIndex, data[index]);\n    });\n  };\n\n  const handleChangeWithNextField = (event, handleChange) => {\n    const { maxLength, value, name } = event.target;\n    const fieldIndex = name.replace('code', '');\n\n    const fieldIntIndex = Number(fieldIndex);\n\n    if (value.length >= maxLength) {\n      if (fieldIntIndex < 6) {\n        const nextfield = document.querySelector(`input[name=code${fieldIntIndex + 1}]`);\n\n        if (nextfield !== null) {\n          nextfield.focus();\n        }\n      }\n    }\n\n    handleChange(event);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Stack direction=\"row\" spacing={2} justifyContent=\"center\">\n        {Object.keys(values).map((name, index) => (\n          <Controller\n            key={name}\n            name={`code${index + 1}`}\n            control={control}\n            render={({ field }) => (\n              <OutlinedInput\n                {...field}\n                id=\"field-code\"\n                autoFocus={index === 0}\n                placeholder=\"-\"\n                onChange={(event) => handleChangeWithNextField(event, field.onChange)}\n                inputProps={{\n                  maxLength: 1,\n                  sx: {\n                    p: 0,\n                    textAlign: 'center',\n                    width: { xs: 36, sm: 56 },\n                    height: { xs: 36, sm: 56 },\n                  },\n                }}\n              />\n            )}\n          />\n        ))}\n      </Stack>\n\n      <LoadingButton\n        fullWidth\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\"\n        loading={isSubmitting}\n        disabled={!isValid}\n        sx={{ mt: 3 }}\n      >\n        Verify\n      </LoadingButton>\n    </form>\n  );\n}\n","import { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Button, Link, Container, Typography } from '@mui/material';\n// layouts\nimport LogoOnlyLayout from '../../layouts/LogoOnlyLayout';\n// routes\nimport { PATH_AUTH } from '../../routes/paths';\n// components\nimport Page from '../../components/Page';\nimport Iconify from '../../components/Iconify';\n// sections\nimport { VerifyCodeForm } from '../../sections/auth/verify-code';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  height: '100%',\n  alignItems: 'center',\n  padding: theme.spacing(12, 0),\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function VerifyCode() {\n  return (\n    <Page title=\"Verify\" sx={{ height: 1 }}>\n      <RootStyle>\n        <LogoOnlyLayout />\n\n        <Container>\n          <Box sx={{ maxWidth: 480, mx: 'auto' }}>\n            <Button\n              size=\"small\"\n              component={RouterLink}\n              to={PATH_AUTH.login}\n              startIcon={<Iconify icon={'eva:arrow-ios-back-fill'} width={20} height={20} />}\n              sx={{ mb: 3 }}\n            >\n              Back\n            </Button>\n\n            <Typography variant=\"h3\" paragraph>\n              Please check your email!\n            </Typography>\n            <Typography sx={{ color: 'text.secondary' }}>\n              We have emailed a 6-digit confirmation code to acb@domain, please enter the code in below box to verify\n              your email.\n            </Typography>\n\n            <Box sx={{ mt: 5, mb: 3 }}>\n              <VerifyCodeForm />\n            </Box>\n\n            <Typography variant=\"body2\" align=\"center\">\n              Donâ€™t have a code? &nbsp;\n              <Link variant=\"subtitle2\" underline=\"none\" onClick={() => {}}>\n                Resend code\n              </Link>\n            </Typography>\n          </Box>\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"],"names":["VerifyCodeForm","navigate","useNavigate","enqueueSnackbar","useSnackbar","VerifyCodeSchema","Yup","shape","code1","required","code2","code3","code4","code5","code6","watch","control","setValue","handleSubmit","formState","isSubmitting","isValid","useForm","mode","resolver","yupResolver","defaultValues","values","useEffect","document","addEventListener","handlePasteClipboard","event","_event$clipboardData","data","clipboardData","getData","split","forEach","call","querySelectorAll","node","index","value","fieldIndex","concat","_jsxs","onSubmit","async","Promise","resolve","setTimeout","console","log","Object","join","PATH_DASHBOARD","root","replace","error","children","_jsx","Stack","direction","spacing","justifyContent","keys","map","name","Controller","render","_ref","field","OutlinedInput","_objectSpread","id","autoFocus","placeholder","onChange","handleChangeWithNextField","handleChange","maxLength","target","fieldIntIndex","Number","length","nextfield","querySelector","focus","inputProps","sx","p","textAlign","width","xs","sm","height","LoadingButton","fullWidth","size","type","variant","loading","disabled","mt","RootStyle","styled","theme","display","alignItems","padding","VerifyCode","Page","title","LogoOnlyLayout","Container","Box","maxWidth","mx","Button","component","RouterLink","to","PATH_AUTH","login","startIcon","Iconify","icon","mb","Typography","paragraph","color","align","Link","underline","onClick"],"sourceRoot":""}